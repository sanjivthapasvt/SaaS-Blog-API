"""added create_at in notifcatoin

Revision ID: 6dbeeb11db0f
Revises: c1d1ce0f397a
Create Date: 2025-08-06 20:21:33.467769

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "6dbeeb11db0f"
down_revision: Union[str, Sequence[str], None] = "c1d1ce0f397a"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("notification", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_notification_notification_type"))

    op.drop_table("notification")
    with op.batch_alter_table("blog", schema=None) as batch_op:
        batch_op.alter_column("author", existing_type=sa.INTEGER(), nullable=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("blog", schema=None) as batch_op:
        batch_op.alter_column("author", existing_type=sa.INTEGER(), nullable=True)

    op.create_table(
        "notification",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("user_id", sa.INTEGER(), nullable=True),
        sa.Column("notification_type", sa.VARCHAR(length=7), nullable=False),
        sa.Column("message", sa.VARCHAR(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("notification", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_notification_notification_type"),
            ["notification_type"],
            unique=False,
        )

    # ### end Alembic commands ###
